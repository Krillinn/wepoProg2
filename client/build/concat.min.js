angular.module("ChatClient",["ngRoute"]),angular.module("ChatClient").config(["$routeProvider",function(a){a.when("/login",{templateUrl:"Views/login.html",controller:"LoginController"}).when("/rooms/:user/",{templateUrl:"Views/rooms.html",controller:"RoomsController"}).when("/room/:user/:room/",{templateUrl:"Views/room.html",controller:"RoomController"}).otherwise({redirectTo:"/login"})}]),angular.module("ChatClient").controller("LoginController",["$scope","$location","$rootScope","$routeParams","socket",function(a,b,c,d,e){a.errorMessage="",a.nickname="",a.getEnter=function(b){13===b.which&&a.login()},a.login=function(){""===a.nickname?a.errorMessage="Please choose a nick-name before continuing!":e.emit("adduser",a.nickname,function(c){c?b.path("/rooms/"+a.nickname):a.errorMessage="This nick-name is already taken!"})}}]),angular.module("ChatClient").controller("RoomController",["$scope","$location","$rootScope","$routeParams","socket",function(a,b,c,d,e){a.currentRoom=d.room,a.currentUser=d.user,a.currentUsers=[],a.errorMessage="",a.currentMessages=[],a.bannedUsers=[],a.currentUserMessage="",a.successMessage="",a.isOp=!1,a.opArray=[],a.privateSender="",a.privateReceiver="",a.currentPrivateUserMessage="",a.incomingPrivateMessage=!1,a.currentPrivateUserMessages=[],e.emit("updateroom",{room:[d.room]},function(b,c){b?(console.log("worked"),e.emit("rooms")):a.errorMessage=c}),e.on("updateusers",function(b,c,d,e){d[a.currentUser]===a.currentUser&&(a.isOp=!0),a.opArray=d,a.currentUsers=c,a.bannedUsers=e}),e.on("recv_privatemsg",function(b){a.privateSender=a.currentUser,a.privateReceiver=b,a.sendPrivateSignal(b),a.incomingPrivateMessage=!0}),a.getPrivateRoomName=function(a,b){var c=[];return c.push(a),c.push(b),c.sort(),c.toString(),c},a.sendPrivateSignal=function(b){a.incomingPrivateMessage=!1,a.privateSender=a.currentUser,a.privateReceiver=b,a.currentPrivateUserMessages=[],console.log("helleeeleelelel");var c=a.getPrivateRoomName(a.privateReceiver,a.privateSender);e.emit("getUpdatePrivateChat",{room:c})},a.sendPrivateMessage=function(){var b=a.getPrivateRoomName(a.privateReceiver,a.privateSender);e.emit("privatemsg",{room:b,nick:a.privateReceiver,message:a.currentPrivateUserMessage},function(b){b&&(a.currentPrivateUserMessage="")})},e.on("updateprivatechat",function(b,c){a.currentPrivateUserMessages=c}),a.getPrivEnter=function(b){13===b.which&&a.sendPrivateMessage()},a.getEnter=function(b){13===b.which&&a.submitMessage()},a.submitMessage=function(){""===a.currentUserMessage?a.errorMessage="Please choose a message to send!":a.currentUserMessage.length>=200?a.errorMessage="Maximum length of message is 200 characters!":(e.emit("sendmsg",{roomName:d.room,msg:a.currentUserMessage}),a.currentUserMessage="")},a.kickUser=function(b){e.emit("kick",{user:b,room:a.currentRoom},function(b){b||(a.errorMessage="Sorry, no user found")})},a.leaveRoom=function(){e.emit("partroom",d.room),b.path("/rooms/"+d.user),a.opArray.length>0&&(a.isOp=!1)},e.on("kicked",function(c,d,e){d===a.currentUser?b.path("/rooms/"+a.currentUser+"/"):e===a.currentUser&&(a.successMessage="Kicked user by the name of "+d)}),e.on("updatechat",function(b,c){b===a.currentRoom&&(a.currentMessages=c)}),a.banUser=function(b){console.log(b),console.log(a.opArray[b]),Object.keys(a.opArray).length>1||a.opArray[b]!=b?e.emit("ban",{user:b,room:a.currentRoom},function(b){b||(a.errorMessage="Sorry, no user found")}):a.errorMessage="You will ruin the chatroom if you ban the last operator"},e.on("banned",function(c,d,e){d===a.currentUser?b.path("/rooms/"+a.currentUser+"/"):e===a.currentUser&&(a.successMessage="Banned user by the name of "+d)}),a.unbanUser=function(b){console.log("heeeelllo"),e.emit("unban",b,function(c){c?a.successMessage="You have successfully unbanned "+b:a.errorMessage="Sorry, no user found"})},a.unbanUser=function(b){console.log(b),console.log(a.opArray[b]),e.emit("unban",{user:b,room:a.currentRoom},function(c){c?a.successMessage="You have successfuly unbanned"+b:a.errorMessage="Sorry, no user found"})},a.opUser=function(b){e.emit("op",{user:b,room:a.currentRoom},function(b){b||(a.errorMessage="Sorry, no user found")})},e.on("opped",function(b,c,d){c===a.currentUser?a.successMessage="You were opped by "+d:d===a.currentUser&&(a.successMessage="You successfully opped "+c)}),e.emit("refreshusers",{room:d.room},function(b){b||(a.errorMessage="Sorry, no room found")}),a.deOpUser=function(b){console.log(Object.keys(a.opArray).length),Object.keys(a.opArray).length>1?e.emit("deop",{user:b,room:a.currentRoom},function(b){b||(a.errorMessage="Sorry, no user found")}):a.errorMessage="You will ruin the chatroom if you deop the last operator"},e.on("deopped",function(b,c,d){c===a.currentUser?(a.successMessage="You were de-opped by "+d,a.isOp=!1):d===a.currentUser&&(a.successMessage="You successfully de-opped "+c)})}]),angular.module("ChatClient").controller("RoomsController",["$scope","$location","$rootScope","$routeParams","socket",function(a,b,c,d,e){a.roomName="",a.errorMessage="",a.typoError="",a.rooms=[],a.currentUser=d.user,a.currentUsers=[],a.rooms=void 0,a.roomsObj=void 0,a.roomPass=void 0,a.passRequired=!1,a.privateSender="",a.privateReceiver="",a.currentPrivateUserMessage="",a.incomingPrivateMessage=!1,a.currentPrivateUserMessages=[],e.emit("rooms"),e.emit("users"),a.logOut=function(){e.emit("disconect"),b.path("/login/")},e.on("updateusersInRooms",function(a){console.log("HERE"),console.log(a),e.emit("users")}),e.on("roomlist",function(b){a.rooms=Object.keys(b),a.roomsObj=Object(b)}),e.on("userlist",function(b){a.currentUsers=b}),e.on("globalRoomsErrorMessage",function(b,c){a.currentUser===b&&(a.errorMessage=c)}),e.on("recv_privatemsg",function(b){a.privateSender=a.currentUser,a.privateReceiver=b,a.sendPrivateSignal(b),a.incomingPrivateMessage=!0}),a.getPrivateRoomName=function(a,b){var c=[];return c.push(a),c.push(b),c.sort(),c.toString(),c},a.sendPrivateSignal=function(b){a.incomingPrivateMessage=!1,a.privateSender=a.currentUser,a.privateReceiver=b,a.currentPrivateUserMessages=[],console.log("helleeeleelelel");var c=a.getPrivateRoomName(a.privateReceiver,a.privateSender);e.emit("getUpdatePrivateChat",{room:c})},a.sendPrivateMessage=function(){var b=a.getPrivateRoomName(a.privateReceiver,a.privateSender);e.emit("privatemsg",{room:b,nick:a.privateReceiver,message:a.currentPrivateUserMessage},function(b){b&&(a.currentPrivateUserMessage="")})},e.on("updateprivatechat",function(b,c){a.currentPrivateUserMessages=c}),a.getPrivEnter=function(b){13===b.which&&a.sendPrivateMessage()},a.getPassEnter=function(b,c){13===b.which&&a.goToRoom(c)},a.getEnter=function(b){13===b.which&&a.submitRoomName()},a.goToRoom=function(c){e.emit("joinroom",{room:c,pass:a.roomsObj[c].passkey},function(d,e){d?b.path("/room/"+a.currentUser+"/"+c):a.errorMessage=e})},a.submitRoomName=function(){""===a.roomName?a.typoError="Please choose a chat-name before continuing!":e.emit("joinroom",{room:a.roomName,pass:a.roomPass},function(c,d){c?b.path("/room/"+a.currentUser+"/"+a.roomName):a.errorMessage=d})}}]),angular.module("ChatClient").factory("socket",["$rootScope",function(a){var b=io.connect("http://localhost:8080");return{on:function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},emit:function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})}}}]);